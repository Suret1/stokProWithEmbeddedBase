/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.frame;

import com.model.Product;
import java.awt.event.KeyEvent;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import com.barcodescanner.BarcodeScanner;
import com.query.Base_Operations;

/**
 *
 * @author suret
 */
public final class MainFrame extends javax.swing.JFrame {

    protected static int selectRow;

    DefaultTableModel model;
    Base_Operations operations = new Base_Operations();
    EditFrame editFrame = new EditFrame();
    BarcodeScanner barcodeScanner = new BarcodeScanner();
    Thread t1 = new Thread(new BarcodeScanner());

    /**
     * Creates new form Program
     */
    public MainFrame() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        productView();
        ipGet();
        total();

        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/icons/warehouse.png")).getImage());

        t1.start();

    }

    public void refresh() {
        MainFrame p2 = new MainFrame();
        p2.setVisible(true);
        this.dispose();
    }

    public void total() {
        int price = 0;

        for (int i = 0; i < model.getRowCount(); i++) {

            String str = model.getValueAt(i, 3).toString();
            Pattern p = Pattern.compile("\\d+");
            Matcher m = p.matcher(str);
            while (m.find()) {
                price += Integer.valueOf(m.group());
            }

        }
        total_products.setText("Total: " + model.getRowCount() + " items and Total price: " + price + " AZN");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        add_item = new javax.swing.JMenuItem();
        delete_item = new javax.swing.JMenuItem();
        edit_item = new javax.swing.JMenuItem();
        update_item = new javax.swing.JMenuItem();
        empty_tabel = new javax.swing.JOptionPane();
        empty_edit = new javax.swing.JOptionPane();
        edit_btn = new javax.swing.JButton();
        clear_btn = new javax.swing.JButton();
        add_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        update_btn = new javax.swing.JButton();
        excel_export = new javax.swing.JButton();
        ip_icon = new javax.swing.JLabel();
        add_text = new javax.swing.JLabel();
        edit_text = new javax.swing.JLabel();
        delete_text = new javax.swing.JLabel();
        update_text = new javax.swing.JLabel();
        clear_txt = new javax.swing.JLabel();
        excel_txt = new javax.swing.JLabel();
        icon_name = new javax.swing.JLabel();
        icon_price = new javax.swing.JLabel();
        icon_search = new javax.swing.JLabel();
        icon_pieces = new javax.swing.JLabel();
        icon_category = new javax.swing.JLabel();
        icon_barcode = new javax.swing.JLabel();
        icon_description = new javax.swing.JLabel();
        total_products = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        ip_text = new javax.swing.JLabel();
        text_description = new javax.swing.JLabel();
        search_text = new javax.swing.JLabel();
        ip_label = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        count = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        barcode = new javax.swing.JTextField();
        search_field = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        background_photo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        count_mode = new javax.swing.JMenuItem();

        add_item.setText("Add");
        add_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_itemActionPerformed(evt);
            }
        });
        popupMenu.add(add_item);

        delete_item.setText("Delete");
        delete_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_itemActionPerformed(evt);
            }
        });
        popupMenu.add(delete_item);

        edit_item.setText("Edit");
        edit_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_itemActionPerformed(evt);
            }
        });
        popupMenu.add(edit_item);

        update_item.setText("Update");
        update_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_itemActionPerformed(evt);
            }
        });
        popupMenu.add(update_item);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AnBarCode");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 1360, 768));
        setForeground(new java.awt.Color(82, 195, 160));
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edit_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/edit.png"))); // NOI18N
        edit_btn.setBorder(null);
        edit_btn.setContentAreaFilled(false);
        edit_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit_btnMouseExited(evt);
            }
        });
        edit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_btnActionPerformed(evt);
            }
        });
        getContentPane().add(edit_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, -1, -1));

        clear_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/broom.png"))); // NOI18N
        clear_btn.setBorder(null);
        clear_btn.setContentAreaFilled(false);
        clear_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clear_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clear_btnMouseExited(evt);
            }
        });
        clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_btnActionPerformed(evt);
            }
        });
        getContentPane().add(clear_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 50, 50));

        add_btn.setBackground(new java.awt.Color(127, 162, 207));
        add_btn.setForeground(new java.awt.Color(33, 150, 243));
        add_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/plus.png"))); // NOI18N
        add_btn.setBorder(null);
        add_btn.setContentAreaFilled(false);
        add_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add_btnMouseExited(evt);
            }
        });
        add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_btnActionPerformed(evt);
            }
        });
        getContentPane().add(add_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, -1, -1));

        delete_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/remove.png"))); // NOI18N
        delete_btn.setBorder(null);
        delete_btn.setContentAreaFilled(false);
        delete_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                delete_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                delete_btnMouseExited(evt);
            }
        });
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        getContentPane().add(delete_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 40, -1));

        update_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/reload.png"))); // NOI18N
        update_btn.setBorder(null);
        update_btn.setContentAreaFilled(false);
        update_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_btnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_btnMouseExited(evt);
            }
        });
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });
        getContentPane().add(update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 50, 30));

        excel_export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/excel - Copy.png"))); // NOI18N
        excel_export.setBorder(null);
        excel_export.setContentAreaFilled(false);
        excel_export.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                excel_exportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                excel_exportMouseExited(evt);
            }
        });
        excel_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excel_exportActionPerformed(evt);
            }
        });
        getContentPane().add(excel_export, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, -1, -1));

        ip_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/laptop - Copy - Copy.png"))); // NOI18N
        ip_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ip_iconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ip_iconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ip_iconMouseExited(evt);
            }
        });
        getContentPane().add(ip_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 120, 40, 70));

        add_text.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        add_text.setText("Add");
        getContentPane().add(add_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 30, 20));
        add_text.setVisible(false);

        edit_text.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        edit_text.setText("Edit");
        getContentPane().add(edit_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 40, 20));
        edit_text.setVisible(false);

        delete_text.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        delete_text.setText("Delete");
        getContentPane().add(delete_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, 50, 20));
        delete_text.setVisible(false);

        update_text.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        update_text.setText("Update");
        getContentPane().add(update_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 50, 20));
        update_text.setVisible(false);

        clear_txt.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        clear_txt.setText("Clear");
        getContentPane().add(clear_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 50, 20));
        clear_txt.setVisible(false);

        excel_txt.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        excel_txt.setText("Export to Excel");
        getContentPane().add(excel_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 200, 110, 20));
        excel_txt.setVisible(false);

        icon_name.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/abc-block - Copy.png"))); // NOI18N
        getContentPane().add(icon_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        icon_price.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/coin - Copy.png"))); // NOI18N
        getContentPane().add(icon_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        icon_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/analytics.png"))); // NOI18N
        icon_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                icon_searchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                icon_searchMouseExited(evt);
            }
        });
        getContentPane().add(icon_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 40, 30, 30));

        icon_pieces.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/number - Copy.png"))); // NOI18N
        getContentPane().add(icon_pieces, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        icon_category.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/list - Copy.png"))); // NOI18N
        getContentPane().add(icon_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        icon_barcode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/barcode2 - Copy.png"))); // NOI18N
        getContentPane().add(icon_barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, -1, -1));

        icon_description.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/description - Copy (2).png"))); // NOI18N
        icon_description.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                icon_descriptionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                icon_descriptionMouseExited(evt);
            }
        });
        getContentPane().add(icon_description, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, -1, -1));

        total_products.setFont(new java.awt.Font("Courier New", 3, 14)); // NOI18N
        getContentPane().add(total_products, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 674, 570, 30));

        category.setBackground(new java.awt.Color(66, 104, 122));
        category.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        category.setForeground(new java.awt.Color(66, 104, 122));
        category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Food", "Non-food", "Drink", "General" }));
        category.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 18), new java.awt.Color(66, 104, 122))); // NOI18N
        category.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryItemStateChanged(evt);
            }
        });
        category.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                categoryMouseWheelMoved(evt);
            }
        });
        category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryMouseClicked(evt);
            }
        });
        category.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categoryKeyReleased(evt);
            }
        });
        getContentPane().add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 250, 40));

        ip_text.setFont(new java.awt.Font("Courier New", 1, 11)); // NOI18N
        ip_text.setText("IP UPDATE");
        getContentPane().add(ip_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, 70, 30));
        ip_text.setVisible(false);

        text_description.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        text_description.setText("Description");
        getContentPane().add(text_description, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 80, 20));
        text_description.setVisible(false);

        search_text.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        search_text.setText("Search");
        getContentPane().add(search_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 50, 30));
        search_text.setVisible(false);

        ip_label.setFont(new java.awt.Font("Courier New", 3, 17)); // NOI18N
        ip_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(ip_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 140, 230, 30));

        name.setBackground(new java.awt.Color(66, 104, 122));
        name.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setText("Product's name");
        name.setBorder(null);
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFocusLost(evt);
            }
        });
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 230, 30));

        count.setBackground(new java.awt.Color(66, 104, 122));
        count.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        count.setForeground(new java.awt.Color(255, 255, 255));
        count.setText("Product's count");
        count.setToolTipText("");
        count.setBorder(null);
        count.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                countFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                countFocusLost(evt);
            }
        });
        getContentPane().add(count, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 230, 30));

        price.setBackground(new java.awt.Color(66, 104, 122));
        price.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        price.setForeground(new java.awt.Color(255, 255, 255));
        price.setText("Product's price");
        price.setBorder(null);
        price.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceFocusLost(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceKeyPressed(evt);
            }
        });
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 230, 30));

        barcode.setBackground(new java.awt.Color(66, 104, 122));
        barcode.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        barcode.setForeground(new java.awt.Color(255, 255, 255));
        barcode.setText("Product's barcode");
        barcode.setToolTipText("");
        barcode.setBorder(null);
        barcode.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        barcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                barcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                barcodeFocusLost(evt);
            }
        });
        getContentPane().add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 230, 30));

        search_field.setBackground(new java.awt.Color(66, 104, 122));
        search_field.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        search_field.setForeground(new java.awt.Color(255, 255, 255));
        search_field.setText("Product search");
        search_field.setBorder(null);
        search_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                search_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                search_fieldFocusLost(evt);
            }
        });
        search_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_fieldActionPerformed(evt);
            }
        });
        search_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_fieldKeyReleased(evt);
            }
        });
        getContentPane().add(search_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 40, 240, 30));

        description.setBackground(new java.awt.Color(66, 104, 122));
        description.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        description.setForeground(new java.awt.Color(255, 255, 255));
        description.setBorder(null);
        getContentPane().add(description, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 230, 30));

        jScrollPane2.setForeground(new java.awt.Color(51, 51, 55));

        table.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.focus"));
        table.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Count", "Price", "Category", "Barcode", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        table.setFocusable(false);
        table.setGridColor(new java.awt.Color(0, 0, 0));
        table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table.setOpaque(false);
        table.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        table.setSurrendersFocusOnKeystroke(true);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table);
        table.setShowHorizontalLines(true);
        table.setShowVerticalLines(true);
        table.setRowSelectionAllowed(true);
        table.getColumnModel().getColumn(0).setMinWidth(0);
        table.getColumnModel().getColumn(0).setMaxWidth(0);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 1360, 330));

        background_photo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/icons/Web 1366 – 1.png"))); // NOI18N
        getContentPane().add(background_photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 730));

        jMenu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenu1.setText("Mode");

        count_mode.setText("Counter Mode");
        count_mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                count_modeActionPerformed(evt);
            }
        });
        jMenu1.add(count_mode);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void productView() {
        model.setRowCount(0);

        ArrayList<Product> products = new ArrayList<Product>();

        products = operations.productsView();

        if (products != null) {
            for (Product out : products) {
                Object[] data = {out.getId(), out.getName(), out.getCount(), out.getPrice(), out.getCategory(), out.getBarcode(), out.getDescription()};
                model.addRow(data);
            }
        }

    }

    public void ipGet() {
        try {
            InetAddress address = InetAddress.getLocalHost();
            String hostadress = address.getHostAddress();

            ip_label.setText(hostadress);
            if (hostadress.equals("127.0.0.1")) {
                ip_label.setText("Not Connected");
            }

        } catch (UnknownHostException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
        if (name.getText().trim().equals("Product's name")) {
            name.setText("");
        }
    }//GEN-LAST:event_nameFocusGained

    private void nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusLost
        if (name.getText().isEmpty()) {
            name.setText("Product's name");
        }
    }//GEN-LAST:event_nameFocusLost

    private void countFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countFocusGained
        if (count.getText().trim().equals("Product's count")) {
            count.setText("");
        }
    }//GEN-LAST:event_countFocusGained

    private void countFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_countFocusLost
        if (count.getText().isEmpty()) {
            count.setText("Product's count");
        }
    }//GEN-LAST:event_countFocusLost

    private void search_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_search_fieldFocusGained
        if (search_field.getText().trim().equals("Product search")) {
            search_field.setText("");
        }
    }//GEN-LAST:event_search_fieldFocusGained

    private void search_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_search_fieldFocusLost
        if (search_field.getText().isEmpty()) {
            search_field.setText("Product search");
        }
    }//GEN-LAST:event_search_fieldFocusLost

    private void add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_btnActionPerformed
        String name = this.name.getText();
        String count = this.count.getText();
        String price = this.price.getText();
        String category = (String) this.category.getSelectedItem();
        String barcode = this.barcode.getText();
        String description = this.description.getText();

        operations.productsAdd(name, count, price, category, barcode, description);

        productView();

    }//GEN-LAST:event_add_btnActionPerformed

    private void edit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_btnActionPerformed

        selectRow = table.getSelectedRow();
        if (selectRow == -1) {
            if (model.getRowCount() == 1) {
                empty_edit.showMessageDialog(this, "Please select item to be edit", "Message", empty_edit.INFORMATION_MESSAGE);
            }
            if (model.getRowCount() == 0) {
                empty_edit.showMessageDialog(this, "Table is currently empty", "Warning", empty_edit.ERROR_MESSAGE);
            }
        } else {

            String name_edit = model.getValueAt(selectRow, 1).toString();
            String count_edit = model.getValueAt(selectRow, 2).toString();
            String price_edit = model.getValueAt(selectRow, 3).toString();
            Object category_edit = model.getValueAt(selectRow, 4);
            String barcode_edit = model.getValueAt(selectRow, 5).toString();
            String description_edit = model.getValueAt(selectRow, 6).toString();

            editFrame.setVisible(true);

            editFrame.name_edit.setText(name_edit);
            editFrame.count_edit.setText(count_edit);
            editFrame.price_edit.setText(price_edit);
            editFrame.category_edit.setSelectedItem(category_edit);
            editFrame.barcode_edit.setText(barcode_edit);
            editFrame.description_edit.setText(description_edit);

        }

    }//GEN-LAST:event_edit_btnActionPerformed

    private void add_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_btnMouseEntered
        add_text.setVisible(true);
    }//GEN-LAST:event_add_btnMouseEntered

    private void add_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_btnMouseExited
        add_text.setVisible(false);
    }//GEN-LAST:event_add_btnMouseExited

    private void delete_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_btnMouseEntered
        delete_text.setVisible(true);
    }//GEN-LAST:event_delete_btnMouseEntered

    private void delete_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_btnMouseExited
        delete_text.setVisible(false);
    }//GEN-LAST:event_delete_btnMouseExited

    private void edit_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_btnMouseEntered
        edit_text.setVisible(true);
    }//GEN-LAST:event_edit_btnMouseEntered

    private void edit_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_btnMouseExited
        edit_text.setVisible(false);
    }//GEN-LAST:event_edit_btnMouseExited

    private void icon_searchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_searchMouseEntered
        search_text.setVisible(true);
    }//GEN-LAST:event_icon_searchMouseEntered

    private void icon_searchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_searchMouseExited
        search_text.setVisible(false);
    }//GEN-LAST:event_icon_searchMouseExited

    private void priceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceFocusGained
        if (price.getText().trim().equals("Product's price")) {
            price.setText("");
        }
    }//GEN-LAST:event_priceFocusGained

    private void priceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceFocusLost
        if (price.getText().isEmpty()) {
            price.setText("Product's price");
        }
    }//GEN-LAST:event_priceFocusLost

    private void add_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_itemActionPerformed
        add_btn.doClick();
    }//GEN-LAST:event_add_itemActionPerformed

    private void delete_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_itemActionPerformed
        delete_btn.doClick();
    }//GEN-LAST:event_delete_itemActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed

        int selectedRow = table.getSelectedRow();

        if (selectedRow == -1) {
            if (model.getRowCount() == 1) {
                empty_tabel.showMessageDialog(this, "Please select item to be deleted", "Message", empty_tabel.INFORMATION_MESSAGE);
            }
            if (model.getRowCount() == 0) {
                empty_tabel.showMessageDialog(this, "Table is currently empty", "Warning", empty_tabel.ERROR_MESSAGE);

            }
        } else {
            int dialogResult = empty_tabel.showConfirmDialog(null, "Do you really want to delete this?", "Warning", empty_tabel.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                int[] selectRows = table.getSelectedRows();

                for (int i : selectRows) {
                    int id = (int) model.getValueAt(i, 0);
                    operations.deleteProduct(id);
                }
                productView();
            }

        }
    }//GEN-LAST:event_delete_btnActionPerformed

    private void edit_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_itemActionPerformed
        edit_btn.doClick();
    }//GEN-LAST:event_edit_itemActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        productView();
        refresh();
    }//GEN-LAST:event_update_btnActionPerformed

    private void update_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_btnMouseEntered
        update_text.setVisible(true);
    }//GEN-LAST:event_update_btnMouseEntered

    private void update_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_btnMouseExited
        update_text.setVisible(false);
    }//GEN-LAST:event_update_btnMouseExited

    private void update_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_itemActionPerformed
        productView();
    }//GEN-LAST:event_update_itemActionPerformed

    private void clear_btnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_btnMouseEntered
        clear_txt.setVisible(true);
    }//GEN-LAST:event_clear_btnMouseEntered

    private void clear_btnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clear_btnMouseExited
        clear_txt.setVisible(false);
    }//GEN-LAST:event_clear_btnMouseExited

    private void clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_btnActionPerformed
        name.setText("");
        count.setText("");
        price.setText("");
        barcode.setText("");
        description.setText("");
    }//GEN-LAST:event_clear_btnActionPerformed

    private void priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            add_btn.doClick();
        }
    }//GEN-LAST:event_priceKeyPressed
    public void dynamicSearch(String search) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);

        table.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter(search));
    }
    private void search_fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_fieldKeyReleased
        String search = search_field.getText();

        dynamicSearch(search);


    }//GEN-LAST:event_search_fieldKeyReleased

    private void categoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            add_btn.doClick();
        }
    }//GEN-LAST:event_categoryKeyReleased

    private void barcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barcodeFocusGained
        if (barcode.getText().trim().equals("Product's barcode")) {
            barcode.setText("");
        }
    }//GEN-LAST:event_barcodeFocusGained

    private void barcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barcodeFocusLost
        if (barcode.getText().isEmpty()) {
            barcode.setText("Product's barcode");
        }
    }//GEN-LAST:event_barcodeFocusLost

    private void icon_descriptionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_descriptionMouseEntered
        text_description.setVisible(true);
    }//GEN-LAST:event_icon_descriptionMouseEntered

    private void icon_descriptionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_descriptionMouseExited
        text_description.setVisible(false);
    }//GEN-LAST:event_icon_descriptionMouseExited

    private void ip_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip_iconMouseClicked
        ipGet();
    }//GEN-LAST:event_ip_iconMouseClicked

    private void ip_iconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip_iconMouseEntered
        ip_text.setVisible(true);
    }//GEN-LAST:event_ip_iconMouseEntered

    private void ip_iconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip_iconMouseExited
        ip_text.setVisible(false);
    }//GEN-LAST:event_ip_iconMouseExited

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tableMouseReleased

    private void count_modeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_count_modeActionPerformed

        CounterFrame frame = new CounterFrame();
        frame.setVisible(true);


    }//GEN-LAST:event_count_modeActionPerformed

    private void excel_exportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excel_exportMouseEntered
        excel_txt.setVisible(true);
    }//GEN-LAST:event_excel_exportMouseEntered

    private void excel_exportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excel_exportMouseExited
        excel_txt.setVisible(false);
    }//GEN-LAST:event_excel_exportMouseExited

    private void excel_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excel_exportActionPerformed
        FileOutputStream excelFou = null;
        BufferedOutputStream excelBou = null;
        XSSFWorkbook excelJTableExporter = null;

        if (model.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(this, "Table is currently empty", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\SNAP-PC\\Desktop");
            excelFileChooser.setDialogTitle("Save as");

            FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("Excel", "xls", "xlsx", "xlsm");
            excelFileChooser.setFileFilter(extensionFilter);
            int excelChooser = excelFileChooser.showSaveDialog(null);

            if (excelChooser == JFileChooser.APPROVE_OPTION) {
                try {
                    excelJTableExporter = new XSSFWorkbook();
                    XSSFSheet excelSheet = excelJTableExporter.createSheet("Products");

                    for (int i = 0; i < model.getRowCount(); i++) {
                        XSSFRow excelRow = excelSheet.createRow(i);
                        for (int j = 0; j < model.getColumnCount(); j++) {
                            XSSFCell excelCell = excelRow.createCell(j);

                            excelCell.setCellValue(model.getValueAt(i, j).toString());

                        }
                    }
                    excelFou = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                    excelBou = new BufferedOutputStream(excelFou);
                    excelJTableExporter.write(excelBou);
                    JOptionPane.showMessageDialog(null, "Exported Succesfully..");

                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();;
                } finally {
                    try {
                        if (excelBou != null) {
                            excelBou.close();
                        }
                        if (excelFou != null) {
                            excelFou.close();
                        }
                        if (excelJTableExporter != null) {
                            excelJTableExporter.close();
                        }
                    } catch (Exception e) {
                    }
                }
            }
        }


    }//GEN-LAST:event_excel_exportActionPerformed

    private void search_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_fieldActionPerformed

    public void productsSearchforCategory(String category) {
        ArrayList<Product> list = new ArrayList<>();

        list = operations.productsSearch(category);
        model.setRowCount(0);
        if (list != null) {

            for (Product out : list) {
                Object[] data = {out.getId(), out.getName(), out.getCount(), out.getPrice(), out.getCategory(), out.getBarcode(), out.getDescription()};
                model.addRow(data);
                total();
            }
        }

        if (model.getRowCount() <= 0) {
            total_products.setText("No results for the category of " + category);
        }
    }

    public void categoryFilter() {
        String filter = category.getSelectedItem().toString();

        productsSearchforCategory(filter);
    }

    private void categoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryItemStateChanged
        categoryFilter();
    }//GEN-LAST:event_categoryItemStateChanged

    private void categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryMouseClicked
        categoryFilter();
    }//GEN-LAST:event_categoryMouseClicked

    private void categoryMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_categoryMouseWheelMoved
        model.setRowCount(0);
        productView();
        total();

    }//GEN-LAST:event_categoryMouseWheelMoved
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new MainFrame().setVisible(true);

            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add_btn;
    private javax.swing.JMenuItem add_item;
    private javax.swing.JLabel add_text;
    private javax.swing.JLabel background_photo;
    public static javax.swing.JTextField barcode;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JButton clear_btn;
    private javax.swing.JLabel clear_txt;
    private javax.swing.JTextField count;
    private javax.swing.JMenuItem count_mode;
    private javax.swing.JButton delete_btn;
    private javax.swing.JMenuItem delete_item;
    private javax.swing.JLabel delete_text;
    private javax.swing.JTextField description;
    public javax.swing.JButton edit_btn;
    private javax.swing.JMenuItem edit_item;
    private javax.swing.JLabel edit_text;
    private javax.swing.JOptionPane empty_edit;
    private javax.swing.JOptionPane empty_tabel;
    private javax.swing.JButton excel_export;
    private javax.swing.JLabel excel_txt;
    private javax.swing.JLabel icon_barcode;
    private javax.swing.JLabel icon_category;
    private javax.swing.JLabel icon_description;
    private javax.swing.JLabel icon_name;
    private javax.swing.JLabel icon_pieces;
    private javax.swing.JLabel icon_price;
    private javax.swing.JLabel icon_search;
    private javax.swing.JLabel ip_icon;
    private javax.swing.JLabel ip_label;
    private javax.swing.JLabel ip_text;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField name;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JTextField price;
    private javax.swing.JTextField search_field;
    private javax.swing.JLabel search_text;
    private javax.swing.JTable table;
    private javax.swing.JLabel text_description;
    private javax.swing.JLabel total_products;
    private javax.swing.JButton update_btn;
    private javax.swing.JMenuItem update_item;
    private javax.swing.JLabel update_text;
    // End of variables declaration//GEN-END:variables

}
